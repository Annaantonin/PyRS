@ONLINE{hdf5,
    author = {{The HDF Group}},
    title = "{Hierarchical Data Format, version 5}",
    year = {1997-NNNN},
    url = {http://www.hdfgroup.org/HDF5/}
}
@article{PETERSON201524,
title = {{Event-based processing of neutron scattering data}},
journal = {{Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment}},
volume = "803",
pages = "24 - 28",
year = "2015",
issn = "0168-9002",
doi = "10.1016/j.nima.2015.09.016",
author = "Peter F. Peterson and Stuart I. Campbell and Michael A. Reuter and Russell J. Taylor and Janik Zikovsky",
}
@article{Arnold2014a,
abstract = {a b s t r a c t The Mantid framework is a software solution developed for the analysis and visualization of neutron scattering and muon spin measurements. The framework is jointly developed by software engineers and scientists at the ISIS Neutron and Muon Facility and the Oak Ridge National Laboratory. The objectives, functionality and novel design aspects of Mantid are described. Published by Elsevier B.V.},
author = {Arnold, O. and Bilheux, J.C. and Borreguero, J.M. and Buts, A. and Campbell, S.I. and Chapon, L. and Doucet, M. and Draper, N. and {Ferraz Leal}, R. and Gigg, M.A. and Lynch, V.E. and Markvardsen, A. and Mikkelson, D.J. and Mikkelson, R.L. and Miller, R. and Palmen, K. and Parker, P. and Passos, G. and Perring, T.G. and Peterson, P.F. and Ren, S. and Reuter, M.A. and Savici, A.T. and Taylor, J.W. and Taylor, R.J. and Tolchenov, R. and Zhou, W. and Zikovsky, J.},
doi = {10.1016/j.nima.2014.07.029},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Arnold et al. - 2014 - Mantid—Data analysis and visualization package for neutron scattering and $\mu$ SR experiments.pdf:pdf},
issn = {01689002},
journal = {Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment},
keywords = {Computer interfaces,Data analysis,Data visualization},
month = {nov},
pages = {156--166},
title = {{Mantid—Data analysis and visualization package for neutron scattering and <math altimg="si0002.gif" overflow="scroll"> <mi mathvariant="normal">$\mu$</mi> </math> SR experiments}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0168900214008729 https://orproxy.lib.utk.edu:2135/S0168900214008729/1-s2.0-S0168900214008729-main.pdf?_tid=6b6bd346-1001-11e8-b948-00000aab0f01&acdnat=1518446072_be9d4f7b421c2c16083816e118d85204 http://linking},
volume = {764},
year = {2014}
}
@article{Virtanen2020,
abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
archivePrefix = {arXiv},
arxivId = {1907.10121},
author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, St{\'{e}}fan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R.J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Ant{\^{o}}nio H. and Pedregosa, Fabian and van Mulbregt, Paul and Vijaykumar, Aditya and Bardelli, Alessandro Pietro and Rothberg, Alex and Hilboll, Andreas and Kloeckner, Andreas and Scopatz, Anthony and Lee, Antony and Rokem, Ariel and Woods, C. Nathan and Fulton, Chad and Masson, Charles and H{\"{a}}ggstr{\"{o}}m, Christian and Fitzgerald, Clark and Nicholson, David A. and Hagen, David R. and Pasechnik, Dmitrii V. and Olivetti, Emanuele and Martin, Eric and Wieser, Eric and Silva, Fabrice and Lenders, Felix and Wilhelm, Florian and Young, G. and Price, Gavin A. and Ingold, Gert Ludwig and Allen, Gregory E. and Lee, Gregory R. and Audren, Herv{\'{e}} and Probst, Irvin and Dietrich, J{\"{o}}rg P. and Silterra, Jacob and Webber, James T. and Slavi{\v{c}}, Janko and Nothman, Joel and Buchner, Johannes and Kulick, Johannes and Sch{\"{o}}nberger, Johannes L. and {de Miranda Cardoso}, Jos{\'{e}} Vin{\'{i}}cius and Reimer, Joscha and Harrington, Joseph and Rodr{\'{i}}guez, Juan Luis Cano and Nunez-Iglesias, Juan and Kuczynski, Justin and Tritz, Kevin and Thoma, Martin and Newville, Matthew and K{\"{u}}mmerer, Matthias and Bolingbroke, Maximilian and Tartre, Michael and Pak, Mikhail and Smith, Nathaniel J. and Nowaczyk, Nikolai and Shebanov, Nikolay and Pavlyk, Oleksandr and Brodtkorb, Per A. and Lee, Perry and McGibbon, Robert T. and Feldbauer, Roman and Lewis, Sam and Tygier, Sam and Sievert, Scott and Vigna, Sebastiano and Peterson, Stefan and More, Surhud and Pudlik, Tadeusz and Oshima, Takuya and Pingel, Thomas J. and Robitaille, Thomas P. and Spura, Thomas and Jones, Thouis R. and Cera, Tim and Leslie, Tim and Zito, Tiziano and Krauss, Tom and Upadhyay, Utkarsh and Halchenko, Yaroslav O. and V{\'{a}}zquez-Baeza, Yoshiki},
doi = {10.1038/s41592-019-0686-2},
eprint = {1907.10121},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific computing in Python.pdf:pdf},
issn = {15487105},
journal = {Nature Methods},
number = {3},
pages = {261--272},
pmid = {32015543},
title = {{SciPy 1.0: fundamental algorithms for scientific computing in Python}},
volume = {17},
year = {2020}
}
@inproceedings{Kieffer2013,
abstract = {2D area detectors like CCD or pixel detectors have become popular in the last 15 years for diffraction experiments (e.g. for WAXS, SAXS, single crystal and powder diffraction (XRPD)). These detectors have a large sensitive area of millions of pixels with high spatial resolution. The software package pyFAI has been designed to reduce SAXS, WAXS and XRPD images taken with those detectors into 1D curves (azimuthal integration) usable by other software for in-depth analysis such as Rietveld refinement, or 2D images (a radial transformation named caking). As a library, the aim of pyFAI is to be integrated into other tools like PyMca or EDNA with a clean pythonic interface. However pyFAI features also command line tools for batch processing, converting data into q-space (q being the momentum transfer) or 2$\theta$-space ($\theta$ being the Bragg angle) and a calibration graphical interface for optimizing the geometry of the experiment using the Debye-Scherrer rings of a reference sample. PyFAI shares the geometry definition of SPD but can directly import geometries determined by the software FIT2D. PyFAI has been designed to work with any kind of detector and geometry (transmission or reflection) and relies on FabIO, a library able to read more than 20 image formats produced by detectors from 12 different manufacturers. During the transformation from cartesian space (x,y) to polar space (2$\theta$, $\chi$), both local and total intensities are conserved in order to obtain accurate quantitative results. Technical details on how this integration is implemented and how it has been ported to native code and parallelized on graphic cards are discussed in this paper.},
author = {Kieffer, J{\'{e}}r{\^{o}}me and Karkoulis, Dimitrios},
booktitle = {Journal of Physics: Conference Series},
doi = {10.1088/1742-6596/425/20/202012},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Kieffer, Karkoulis - 2013 - PyFAI, a versatile library for azimuthal regrouping.pdf:pdf},
issn = {17426596},
number = {PART 20},
pages = {202012},
title = {{PyFAI, a versatile library for azimuthal regrouping}},
url = {https://iopscience.iop.org/article/10.1088/1742-6596/425/20/202012/pdf},
volume = {425},
year = {2013}
}
@article{Harris2020,
abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
archivePrefix = {arXiv},
arxivId = {2006.10256},
author = {Harris, Charles R. and Millman, K. Jarrod and van der Walt, St{\'{e}}fan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and van Kerkwijk, Marten H. and Brett, Matthew and Haldane, Allan and del R{\'{i}}o, Jaime Fern{\'{a}}ndez and Wiebe, Mark and Peterson, Pearu and G{\'{e}}rard-Marchant, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
doi = {10.1038/s41586-020-2649-2},
eprint = {2006.10256},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Harris et al. - 2020 - Array programming with NumPy.pdf:pdf},
issn = {14764687},
journal = {Nature},
number = {7825},
pages = {357--362},
pmid = {32939066},
publisher = {Springer US},
title = {{Array programming with NumPy}},
url = {http://dx.doi.org/10.1038/s41586-020-2649-2},
volume = {585},
year = {2020}
}
@article{Prescher2015,
abstract = {The amount of data collected during synchrotron X-ray diffraction (XRD) experiments is constantly increasing. Most of the time, the data are collected with image detectors, which necessitates the use of image reduction/integration routines to extract structural information from measured XRD patterns. This step turns out to be a bottleneck in the data processing procedure due to a lack of suitable software packages. In particular, fast-running synchrotron experiments require online data reduction and analysis in real time so that experimental parameters can be adjusted interactively. Dioptas is a Python-based program for on-the-fly data processing and exploration of two-dimensional X-ray diffraction area detector data, specifically designed for the large amount of data collected at XRD beamlines at synchrotrons. Its fast data reduction algorithm and graphical data exploration capabilities make it ideal for online data processing during XRD experiments and batch post-processing of large numbers of images.},
author = {Prescher, Clemens and Prakapenka, Vitali B.},
doi = {10.1080/08957959.2015.1059835},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Prescher, Prakapenka - 2015 - DIOPTAS A program for reduction of two-dimensional X-ray diffraction data and data exploration.pdf:pdf},
issn = {14772299},
journal = {High Pressure Research},
keywords = {X-ray diffraction,data analysis software,detector calibration,diamond anvil cell,high pressure,synchrotron},
month = {jul},
number = {3},
pages = {223--230},
publisher = {Taylor and Francis Ltd.},
title = {{DIOPTAS: A program for reduction of two-dimensional X-ray diffraction data and data exploration}},
volume = {35},
year = {2015}
}
@inproceedings{White2019,
address = {Melbourne, Australia},
author = {White, Greg and Slac, Murali Shankar and Park, Menlo and Johnson, Andrew Nicholas and Rivers, Lloyd and Shen, Guobao and Anl, Sinisa Veseli and Bnl, Kunal Shroff and Island, Long and York, New and Cosylab, Matej Sekoranja and Dls, Tom Cobb and Ess, Timo Korhonen and Gareth, David and Euxfel, Hickin and Junkes, Heinz and Gregor, Martin and Frib, Konrad and Lansing, East and Lange, Ralph and Organization, Iter and Durance, Paul and Hartman, Steven M and Kasemir, Kay-uwe and Pearson, Matthew and Vodopivec, Klemen and Ridge, Oak and Dalesio, Leo Bob and Davidsaver, Michael and Dcs, Osprey and Psi, Dirk Zimoch and Psi, Villigen and Richard, Martin and Self, Kraimer},
booktitle = {International Particle Accelerator Conference (10th)},
doi = {10.18429/JACoW-IPAC2019-TUZZPLM3},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/White et al. - 2019 - THE EPICS SOFTWARE FRAMEWORK MOVES FROM CONTROLS TO PHYSICS.pdf:pdf},
isbn = {9783954502080},
pages = {1216--1218},
publisher = {JACoW Publishing},
title = {{THE EPICS SOFTWARE FRAMEWORK MOVES FROM CONTROLS TO PHYSICS}},
year = {2019}
}
@misc{Homepage2020,
author = {Homepage, EPICS (new)},
publisher = {https://epics-controls.org},
title = {{EPICS (new) homepage,}},
url = {https://epics-controls.org},
year = {2020}
}
@inproceedings{Vodopivec2017,
abstract = {In addition to its use for control systems and slow device control, EPICS provides a strong infrastructure for develop-ing high throughput applications for continuous data acquisi-tion. Integrating data acquisition into an EPICS environment has many advantages. The EPICS network protocols provide for tight control and monitoring of instrument operations through an extensive set of tools. As part of a facility-wide initiative at the Spallation Neutron Source at Oak Ridge National Laboratory, EPICS-based data acquisition and de-tector control software has been developed and deployed to a growing number of neutron scattering instruments. The software interacts with in-house detector electronics using fast optical channels for bi-directional communication and data acquisition, and is built around " asynPortDriver, " which allows the passing of arbitrary data structures between soft-ware plugins. This completely modular design enables versa-tile configuration of data pre-processing plugins, as dictated by the neutron detector type and various instrument require-ments. After 3 years of experience capturing average data rates of 1.5 TB per day, this system shows exemplary results of efficiency and reliability.},
address = {Barcelona, Spain},
author = {Vodopivec, K and Vacaliuc, B},
booktitle = {Conference on Accelerator and Large Experiment Control Systems},
doi = {10.18429/JACoW-ICALEPCS2017-TUBPA05},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Vodopivec, Vacaliuc - 2017 - High Throughput Data Acquisition With Epics.pdf:pdf},
isbn = {9783954501939},
pages = {213--217},
publisher = {JACoW Publishing},
title = {{High Throughput Data Acquisition With Epics}},
url = {http://icalepcs2017.vrws.de/papers/tubpa05.pdf},
year = {2017}
}
@article{Konnecke2015,
abstract = {NeXus is an effort by an international group of scientists to define a common data exchange and archival format for neutron, X-ray and muon experiments. NeXus is built on top of the scientific data format HDF5 and adds domain-specific rules for organizing data within HDF5 files, in addition to a dictionary of well defined domain-specific field names. The NeXus data format has two purposes. First, it defines a format that can serve as a container for all relevant data associated with a beamline. This is a very important use case. Second, it defines standards in the form of application definitions for the exchange of data between applications. NeXus provides structures for raw experimental data as well as for processed data.},
author = {K{\"{o}}nnecke, Mark and Akeroyd, Frederick A. and Bernstein, Herbert J. and Brewster, Aaron S. and Campbell, Stuart I. and Clausen, Bj{\"{o}}rn and Cottrell, Stephen and Hoffmann, Jens Uwe and Jemian, Pete R. and M{\"{a}}nnicke, David and Osborn, Raymond and Peterson, Peter F. and Richter, Tobias and Suzuki, Jiro and Watts, Benjamin and Wintersberger, Eugen and Wuttke, Joachim},
doi = {10.1107/S1600576714027575},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/K{\"{o}}nnecke et al. - 2015 - The NeXus data format.pdf:pdf},
issn = {16005767},
journal = {Journal of Applied Crystallography},
keywords = {HDF5,NeXus data format,data archiving,data exchange,platform-independent},
number = {1},
pages = {301--305},
title = {{The NeXus data format}},
volume = {48},
year = {2015}
}
@techreport{Kieffer,
abstract = {The pyFAI package has been designed to reduce X-ray diffraction images into powder diffraction curves to be further processed by scientists. This contribution describes how to convert an image into a radial profile using the Numpy package, how the process was accelerated using Cython. The algorithm was parallelised, needing a complete redesign to benefit from massively parallel devices like graphical processing units or accelerators like the Intel Xeon Phi using the PyOpenCL library.},
archivePrefix = {arXiv},
arxivId = {1412.6367v1},
author = {Kieffer, J{\'{e}}r{\^{o}}me and Ashiotis, Giannis},
booktitle = {PROC. OF THE 7th EUR. CONF. ON PYTHON IN SCIENCE (EUROSCIPY},
eprint = {1412.6367v1},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Kieffer, Ashiotis - Unknown - PyFAI a Python library for high performance azimuthal integration on GPU.pdf:pdf},
keywords = {HPC,Index Terms-X-rays,OpenCL,SAXS,parallel algorithms,powder diffraction},
pages = {3},
title = {{PyFAI: a Python library for high performance azimuthal integration on GPU}},
url = {https://arxiv.org/pdf/1412.6367.pdf},
volume = {2014}
}
@article{Toby2013,
abstract = {The newly developed GSAS-II software is a general purpose package for data reduction, structure solution and structure refinement that can be used with both single-crystal and powder diffraction data from both neutron and X-ray sources, including laboratory and synchrotron sources, collected on both two- and one-dimensional detectors. It is intended that GSAS-II will eventually replace both the GSAS and the EXPGUI packages, as well as many other utilities. GSAS-II is open source and is written largely in object-oriented Python but offers speeds comparable to compiled code because of its reliance on the Python NumPy and SciPy packages for computation. It runs on all common computer platforms and offers highly integrated graphics, both for a user interface and for interpretation of parameters. The package can be applied to all stages of crystallographic analysis for constant-wavelength X-ray and neutron data. Plans for considerable additional development are discussed.},
author = {Toby, Brian H. and {Von Dreele}, Robert B.},
doi = {10.1107/S0021889813003531},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Toby, Von Dreele - 2013 - GSAS-II the genesis of a modern open-source all purpose crystallography software package.pdf:pdf},
isbn = {0021889813},
issn = {0021-8898},
journal = {Journal of Applied Crystallography},
month = {mar},
number = {2},
pages = {544--549},
publisher = {International Union of Crystallography},
title = {{GSAS-II : the genesis of a modern open-source all purpose crystallography software package}},
url = {http://scripts.iucr.org/cgi-bin/paper?S0021889813003531},
volume = {46},
year = {2013}
}
@article{Randau2011,
abstract = {Modern materials science diffractometers are generally equipped with area detectors that allow a high time efficiency to be achieved by simultaneously collecting the scattering pattern over large angular regions. These area-detector-based instruments, however, produce a huge amount of data, especially if they are located at large-scale neutron or synchrotron sources. The software StressTextureCalculator (STeCa) was designed to facilitate fast, easy and automated access to such area-detector data. Its outstanding features are direct calculation of diffraction patterns from different types of area-detector measurements, automatic data treatment and peak fitting using several implemented fit options. The resulting information on intensity, peak shift and broadening can then be exported into several data formats. These in turn can be used as input for a wide range of texture, stress and microstructure analysis software packages without additional prior treatment. {\textcopyright} 2011 International Union of Crystallography Printed in Singapore - all rights reserved.},
author = {Randau, C. and Garbe, U. and Brokmeier, H. G.},
doi = {10.1107/S0021889811012064},
file = {:Users/hcf/Library/Application Support/Mendeley Desktop/Downloaded/Randau, Garbe, Brokmeier - 2011 - StressTextureCalculator A software tool to extract texture, strain and microstructure information from.pdf:pdf},
issn = {00218898},
journal = {Journal of Applied Crystallography},
keywords = {STeCa,StressTextureCalculator,area detectors,hard X-rays,microstructure,neutrons,residual stress,texture},
month = {jun},
number = {3},
pages = {641--646},
title = {{StressTextureCalculator: A software tool to extract texture, strain and microstructure information from area-detector measurements}},
volume = {44},
year = {2011}
}
@techreport{Larson2004,
abstract = {The ternary iron arsenide BaFe2As2 becomes superconducting by hole doping, which was achieved by partial substitution of the barium site with potassium. We have discovered bulk superconductivity at Tc=38 K in (Ba1-xKx)Fe2As2 with x0.4. The parent compound BaFe2As2 crystallizes in the tetragonal ThCr2Si2-type structure, which consists of (FeAs)$\delta$- iron arsenide layers separated by Ba2+ ions. BaFe2As2 is a poor metal and exhibits a spin density wave anomaly at 140 K. By substituting Ba2+ for K+ ions we have introduced holes in the (FeAs)- layers, which suppress the anomaly and induce superconductivity. The Tc of 38 K in (Ba0.6K0.4)Fe2As2 is the highest in hole doped iron arsenide superconductors so far. Therefore, we were able to expand this class of superconductors by oxygen-free compounds with the ThCr2Si2-type structure.},
address = {Los Alamos},
archivePrefix = {arXiv},
arxivId = {0805.4630},
author = {Larson, Allen C and {Von Dreele}, Robert B},
booktitle = {Los Alamos National Laboratory Report LAUR},
doi = {10.1103/PhysRevLett.101.107006},
eprint = {0805.4630},
isbn = {86},
issn = {0031-9007},
number = {Report LAUR 86-748},
pages = {86--748},
pmid = {18851249},
title = {{General Structure Analysis System (GSAS)}},
url = {https://subversion.xor.aps.anl.gov/EXPGUI/gsas/all/GSAS Manual.pdf},
volume = {748},
year = {2004}
}
@article{Pham2021,
abstract = {X-Light is an open-source software that is written in Python with a graphical user interface. X-Light was developed to determine residual stress by X-ray diffraction. This software can process the 0D, 1D and 2D diffraction data obtained with laboratory diffractometers or synchrotron radiation. X-Light provides several options for stress analysis and five functions to fit a peak: Gauss, Lorentz, Pearson VII, pseudo-Voigt and Voigt. The residual stress is determined by the conventional sin2$\psi$ method and the fundamental method.},
author = {Pham, Tu Quoc Sang and Geandier, Guillaume and Ratel-Ramond, Nicolas and Mareau, Charles and Malard, Benoit},
doi = {10.1107/S160057672100618X},
file = {:Users/hcf/Downloads/Journal of Applied Crystallography - 2021 - Pham - X%E2%80%90Light  an open%E2%80%90source software written in Python to determine the.pdf:pdf},
issn = {16005767},
journal = {Journal of Applied Crystallography},
keywords = {Gaussian,Lorentzian,Pearson VII,Voigt,X-Light software,fundamental X-ray diffraction method,pseudo-Voigt,residual stress,sin2$\psi$ method},
pages = {1244--1251},
title = {{X-Light: An open-source software written in Python to determine the residual stress by X-ray diffraction}},
volume = {54},
year = {2021}
}
@ONLINE{Newville2021,
author = {Newville, Matt and Otten, Renee and Nelson, Andrew and Ingargiola, Antonino and Stensitzki, Till and Allan, Dan and Fox, Austin and Carter, Faustin and Micha{\l} and Pustakhod, Dima and Lneuhaus and Weigand, Sebastian and Osborn, Ray and Glenn and Deil, Christoph and Mark and Hansen, Allan L. R. and Pasquevich, Gustavo and Foks, Leon and Zobrist, Nicholas and Frost, Oliver and Beelen, Alexandre and Stuermer and Kwertyops and Polloreno, Anthony and Caldwell, Shane and Almarza, Anthony and Persaud, Arun and Gamari, Ben and Maier, Benjamin F.},
doi = {10.5281/ZENODO.4516651},
month = {feb},
title = {lmfit/lmfit-py 1.0.2},
url = {https://doi.org/10.5281/zenodo.4516651#.YIqyCXuFy44.mendeley},
year = {2021}
}
@article{WojdyrFityk:,
author = {Wojdyr, M},
journal = {Journal of Applied Crystallography},
pages = {1126--1128},
title = {{Fityk: a general-purpose peak fitting program}},
volume = {43},
year = {2010}
}
@article{Huchings,
author = {Huchings, M.T. and Withers, Philip and Holden, T.M. and Lorentzen, T.},
year = {2005},
month = {01},
pages = {149-202},
title = {Introduction to the Characterization of Residual Stress by Neutron Diffraction, CRC Press},
journal = {Taylor & Francis}
}